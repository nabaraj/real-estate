[{"C:\\resource\\reactjs\\realestate\\src\\App.js":"1","C:\\resource\\reactjs\\realestate\\src\\index.js":"2","C:\\resource\\reactjs\\realestate\\src\\redux\\project.reducer.js":"3","C:\\resource\\reactjs\\realestate\\src\\redux\\rootReducer.js":"4","C:\\resource\\reactjs\\realestate\\src\\view\\Home.js":"5","C:\\resource\\reactjs\\realestate\\src\\view\\CreateProject.js":"6","C:\\resource\\reactjs\\realestate\\src\\view\\ErrorBoundary.js":"7","C:\\resource\\reactjs\\realestate\\src\\redux\\ProjectAction.js":"8","C:\\resource\\reactjs\\realestate\\src\\redux\\store.js":"9","C:\\resource\\reactjs\\realestate\\src\\components\\projectCard\\ProjectCard.js":"10","C:\\resource\\reactjs\\realestate\\src\\utils\\constants.js":"11","C:\\resource\\reactjs\\realestate\\src\\utils\\service.js":"12"},{"size":584,"mtime":1608966062995,"results":"13","hashOfConfig":"14"},{"size":458,"mtime":1608910515718,"results":"15","hashOfConfig":"14"},{"size":586,"mtime":1609009386904,"results":"16","hashOfConfig":"14"},{"size":200,"mtime":1608957876805,"results":"17","hashOfConfig":"14"},{"size":3347,"mtime":1609009755960,"results":"18","hashOfConfig":"14"},{"size":3747,"mtime":1609010275072,"results":"19","hashOfConfig":"14"},{"size":701,"mtime":1608870748806,"results":"20","hashOfConfig":"14"},{"size":1321,"mtime":1609001629922,"results":"21","hashOfConfig":"14"},{"size":481,"mtime":1608878345332,"results":"22","hashOfConfig":"14"},{"size":4667,"mtime":1608921964870,"results":"23","hashOfConfig":"14"},{"size":88,"mtime":1608919533677,"results":"24","hashOfConfig":"14"},{"size":415,"mtime":1608958359700,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fv7gme",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\resource\\reactjs\\realestate\\src\\App.js",[],"C:\\resource\\reactjs\\realestate\\src\\index.js",[],"C:\\resource\\reactjs\\realestate\\src\\redux\\project.reducer.js",["52"],"C:\\resource\\reactjs\\realestate\\src\\redux\\rootReducer.js",[],"C:\\resource\\reactjs\\realestate\\src\\view\\Home.js",["53","54"],"import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport ProjectCard from '../components/projectCard/ProjectCard';\r\nimport { getProject, deleteProject, putProject } from './../redux/ProjectAction'\r\n\r\nexport default function Home() {\r\n  const { projects } = useSelector(state => state.projectReducer);\r\n  const dispatch = useDispatch();\r\n  let history = useHistory();\r\n  useEffect(() => {\r\n    console.log(dispatch(getProject()));\r\n    dispatch(getProject()).then(res => {\r\n      console.log(\"##### \", res);\r\n    });\r\n  }, []);\r\n\r\n  const editProject = (e, id, type) => {\r\n\r\n    e.preventDefault();\r\n    if (type === 'delete') {\r\n      dispatch(deleteProject(id))\r\n    }\r\n    if (type === 'edit') {\r\n      history.push(`/edit/${id}`)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      {projects !== 'loading' && (<div className=\"row mb-5\">\r\n        <div className=\"col-sm-6\">\r\n          <h3 className=\"mb-1\"><span className=\"text-secondary\">Featured</span> <span className=\"text-dark\">Developers</span></h3>\r\n          <h5 className=\"text-secondary font-17\">Prominent Developers in Bangalore</h5>\r\n        </div>\r\n        <div className=\"col-sm-6 text-sm-right\">\r\n          <Link className='btn bg-gradient text-white text-uppercase rounded-pill' to=\"/create\">+ add new developer</Link>\r\n        </div>\r\n      </div>)}\r\n      {/* projects grid start */}\r\n\r\n      <div className=\"row\">\r\n        {projects === 'loading' && (<div className=\"text-center w-100\"><div className=\"spinner-border \" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </div></div>)}\r\n        {projects !== 'loading' && projects.length > 0 && projects.map(project => (\r\n          <ProjectCard\r\n            editProject={editProject}\r\n            key={project.id}\r\n            project={project}\r\n          />\r\n        ))}\r\n      </div>\r\n      {/* projects grid start */}\r\n      <div className=\"row my-5\">\r\n        <div className=\"col-sm-6\">\r\n          <h3 className=\"mb-1\"><span className=\"text-secondary\">Trending</span> <span className=\"text-dark\">Projects</span></h3>\r\n          <h5 className=\"text-secondary font-17\">Most sought-after projects in Bangalore</h5>\r\n        </div>\r\n        <div className=\"col-sm-6 text-sm-right\">\r\n          <button className='btn bg-gradient text-white text-uppercase rounded-pill'>+ add new Project</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-4\">\r\n          <div className=\"card mb-3\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-md-4\">\r\n                <img src=\"...\" className=\"card-img\" alt=\"...\" />\r\n              </div>\r\n              <div className=\"col-md-8\">\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">Card title</h5>\r\n                  <p className=\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>\r\n                  <p className=\"card-text\"><small className=\"text-muted\">Last updated 3 mins ago</small></p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","C:\\resource\\reactjs\\realestate\\src\\view\\CreateProject.js",["55","56"],"import React, { useState, useEffect } from 'react';\r\nimport './CreateProject.scss';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { postProject, putProject, getProject } from \"./../redux/ProjectAction\";\r\n\r\nconst formInitialValues = {\r\n  logo: '',\r\n  developer: '',\r\n  totalExp: '',\r\n  totalProjects: '',\r\n  desc: '',\r\n  title: '',\r\n  location: '',\r\n  imgURL: ''\r\n}\r\nexport default function CreateProject({ match }) {\r\n  const [formData, setFormData] = useState(formInitialValues);\r\n  const [submitType, setSubmitType] = useState('create')\r\n  const { projects } = useSelector(state => state.projectReducer);\r\n\r\n  const dispatch = useDispatch();\r\n  console.log(match.params.id);\r\n  useEffect(async () => {\r\n    if (match.params.id) {\r\n      let id = match.params.id;\r\n      if (projects === 'loading') {\r\n        dispatch(getProject()).then(res => {\r\n          let filteredProject = res.filter(item => {\r\n            return item.id === parseInt(id);\r\n          })\r\n          if (filteredProject.length > 0) {\r\n            setSubmitType('edit')\r\n            setFormData(filteredProject[0]);\r\n          }\r\n        })\r\n      } else {\r\n        let filteredProject = projects.filter(item => {\r\n          return item.id === parseInt(id);\r\n        })\r\n        if (filteredProject.length > 0) {\r\n          setSubmitType('edit')\r\n          setFormData(filteredProject[0]);\r\n        }\r\n      }\r\n\r\n    }\r\n  })\r\n\r\n  const updateForm = (e) => {\r\n    let name = e.target.name;\r\n    let value = e.target.value;\r\n    let formValues = { ...formData };\r\n    if (!formValues[name]) {\r\n      formValues[name] = value;\r\n    } else {\r\n      formValues[name] = value;\r\n    }\r\n    setFormData(formValues);\r\n  }\r\n  return (\r\n\r\n    <div className=\"container createForm mt-5\" style={{ maxWidth: '300px' }}>\r\n      <h6><span className=\"text-secondary\">Featured</span> <span className=\"text-dark\">Developers</span></h6>\r\n      <label className=\"form-control-label\"> Developer Logo Image URL</label>\r\n      <input type=\"text\" onChange={updateForm} name=\"logo\" value={formData['logo']} className=\"form-control form-rounded\" />\r\n      <label className=\"form-control-label\"> Developer Name</label>\r\n      <input type=\"text\" name=\"developer\" value={formData['developer']} onChange={updateForm} className=\"form-control form-rounded\" />\r\n      <label className=\"form-control-label\"> Years of totalExp</label>\r\n      <input type=\"text\" name=\"totalExp\" value={formData['totalExp']} onChange={updateForm} className=\"form-control form-rounded\" />\r\n      <label className=\"form-control-label\"> Projects count</label>\r\n      <input type=\"text\" name=\"totalProjects\" value={formData['totalProjects']} onChange={updateForm} className=\"form-control form-rounded\" />\r\n      <label className=\"form-control-label\"> desc</label>\r\n      <textarea name=\"desc\" value={formData['desc']} onChange={updateForm} className=\"form-control form-rounded\" rows=\"3\"></textarea>\r\n      <label className=\"form-control-label\"> Project name</label>\r\n      <input type=\"text\" name=\"title\" value={formData['title']} onChange={updateForm} className=\"form-control form-rounded\" />\r\n      <label className=\"form-control-label\"> Project location</label>\r\n      <input type=\"text\" name=\"location\" value={formData['location']} onChange={updateForm} className=\"form-control form-rounded\" />\r\n      <label className=\"form-control-label\"> Project image URL</label>\r\n      <input type=\"text\" name=\"imgURL\" value={formData['imgURL']} onChange={updateForm} className=\"form-control form-rounded\" />\r\n      <button type=\"button\" className=\"btn btn-primary bg-gradient\" onClick={() => submitType === 'create' ? dispatch(postProject(formData)) : dispatch(putProject(formData))}>UPDATE</button>\r\n    </div >\r\n  )\r\n}\r\n","C:\\resource\\reactjs\\realestate\\src\\view\\ErrorBoundary.js",[],"C:\\resource\\reactjs\\realestate\\src\\redux\\ProjectAction.js",[],"C:\\resource\\reactjs\\realestate\\src\\redux\\store.js",[],"C:\\resource\\reactjs\\realestate\\src\\components\\projectCard\\ProjectCard.js",["57"],"C:\\resource\\reactjs\\realestate\\src\\utils\\constants.js",[],"C:\\resource\\reactjs\\realestate\\src\\utils\\service.js",[],{"ruleId":"58","severity":1,"message":"59","line":10,"column":7,"nodeType":"60","messageId":"61","endLine":10,"endColumn":13},{"ruleId":"62","severity":1,"message":"63","line":5,"column":37,"nodeType":"64","messageId":"65","endLine":5,"endColumn":47},{"ruleId":"66","severity":1,"message":"67","line":16,"column":6,"nodeType":"68","endLine":16,"endColumn":8,"suggestions":"69"},{"ruleId":"66","severity":1,"message":"70","line":23,"column":3,"nodeType":"64","endLine":23,"endColumn":12,"suggestions":"71"},{"ruleId":"66","severity":1,"message":"72","line":23,"column":13,"nodeType":"73","endLine":47,"endColumn":4},{"ruleId":"74","severity":1,"message":"75","line":83,"column":15,"nodeType":"76","endLine":83,"endColumn":118},"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","no-unused-vars","'putProject' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["77"],"React Hook useEffect contains a call to 'setSubmitType'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [match.params.id, projects, dispatch] as a second argument to the useEffect Hook.",["78"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"79","fix":"80"},{"desc":"81","fix":"82"},"Update the dependencies array to be: [dispatch]",{"range":"83","text":"84"},"Add dependencies array: [match.params.id, projects, dispatch]",{"range":"85","text":"86"},[626,628],"[dispatch]",[1414,1414],", [match.params.id, projects, dispatch]"]