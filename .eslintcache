[{"C:\\resource\\reactjs\\realestate\\src\\App.js":"1","C:\\resource\\reactjs\\realestate\\src\\index.js":"2","C:\\resource\\reactjs\\realestate\\src\\redux\\project.reducer.js":"3","C:\\resource\\reactjs\\realestate\\src\\redux\\rootReducer.js":"4","C:\\resource\\reactjs\\realestate\\src\\view\\Home.js":"5","C:\\resource\\reactjs\\realestate\\src\\view\\CreateProject.js":"6","C:\\resource\\reactjs\\realestate\\src\\view\\ErrorBoundary.js":"7","C:\\resource\\reactjs\\realestate\\src\\redux\\ProjectAction.js":"8","C:\\resource\\reactjs\\realestate\\src\\redux\\store.js":"9","C:\\resource\\reactjs\\realestate\\src\\components\\projectCard\\ProjectCard.js":"10","C:\\resource\\reactjs\\realestate\\src\\utils\\constants.js":"11"},{"size":378,"mtime":1608830929730,"results":"12","hashOfConfig":"13"},{"size":458,"mtime":1608910515718,"results":"14","hashOfConfig":"13"},{"size":677,"mtime":1608920230003,"results":"15","hashOfConfig":"13"},{"size":232,"mtime":1608880443843,"results":"16","hashOfConfig":"13"},{"size":2917,"mtime":1608916141231,"results":"17","hashOfConfig":"13"},{"size":2759,"mtime":1608919459147,"results":"18","hashOfConfig":"13"},{"size":701,"mtime":1608870748806,"results":"19","hashOfConfig":"13"},{"size":1474,"mtime":1608921766977,"results":"20","hashOfConfig":"13"},{"size":481,"mtime":1608878345332,"results":"21","hashOfConfig":"13"},{"size":4667,"mtime":1608921964870,"results":"22","hashOfConfig":"13"},{"size":88,"mtime":1608919533677,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fv7gme",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\resource\\reactjs\\realestate\\src\\App.js",[],"C:\\resource\\reactjs\\realestate\\src\\index.js",[],"C:\\resource\\reactjs\\realestate\\src\\redux\\project.reducer.js",["49"],"import { GET_PROJECTS, POST_PROJECT } from './../utils/constants';\r\nconst INITIAL_STATE = {\r\n  projects: [],\r\n};\r\nconst reducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      console.log(action.data, state.projects);\r\n      return Object.assign({}, state, { projects: [...action.data] })\r\n      break;\r\n    case POST_PROJECT:\r\n      let projects = [...state.projects];\r\n      console.log(\"##### \", state, projects);\r\n      projects.push(action.data)\r\n      console.log(action.data);\r\n      return Object.assign({}, state, { projects: [...projects] })\r\n    default:\r\n      break;\r\n  }\r\n  return state;\r\n}\r\nexport default reducer;","C:\\resource\\reactjs\\realestate\\src\\redux\\rootReducer.js",[],"C:\\resource\\reactjs\\realestate\\src\\view\\Home.js",["50","51"],"import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\nimport ProjectCard from '../components/projectCard/ProjectCard';\r\nimport { getProject, deleteProject, putProject } from './../redux/ProjectAction'\r\n\r\nexport default function Home() {\r\n  const { projects } = useSelector(state => state.projectReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getProject());\r\n  }, []);\r\n\r\n  const editProject = (e, id, type) => {\r\n\r\n    e.preventDefault();\r\n    if (type === 'delete') {\r\n      dispatch(deleteProject(id))\r\n    }\r\n    if (type === 'edit') {\r\n\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"row mb-5\">\r\n        <div className=\"col-sm-6\">\r\n          <h3 className=\"mb-1\"><span className=\"text-secondary\">Featured</span> <span className=\"text-dark\">Developers</span></h3>\r\n          <h5 className=\"text-secondary font-17\">Prominent Developers in Bangalore</h5>\r\n        </div>\r\n        <div className=\"col-sm-6 text-sm-right\">\r\n          <Link className='btn bg-gradient text-white text-uppercase rounded-pill' to=\"/create\">+ add new developer</Link>\r\n        </div>\r\n      </div>\r\n      {/* projects grid start */}\r\n      <div className=\"row\">\r\n        {projects.length > 0 && projects.map(project => (\r\n          <ProjectCard\r\n            editProject={editProject}\r\n            key={project.id}\r\n            project={project}\r\n          />\r\n        ))}\r\n      </div>\r\n      {/* projects grid start */}\r\n      <div className=\"row my-5\">\r\n        <div className=\"col-sm-6\">\r\n          <h3 className=\"mb-1\"><span className=\"text-secondary\">Trending</span> <span className=\"text-dark\">Projects</span></h3>\r\n          <h5 className=\"text-secondary font-17\">Most sought-after projects in Bangalore</h5>\r\n        </div>\r\n        <div className=\"col-sm-6 text-sm-right\">\r\n          <button className='btn bg-gradient text-white text-uppercase rounded-pill'>+ add new Project</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-4\">\r\n          <div className=\"card mb-3\">\r\n            <div className=\"row no-gutters\">\r\n              <div className=\"col-md-4\">\r\n                <img src=\"...\" className=\"card-img\" alt=\"...\" />\r\n              </div>\r\n              <div className=\"col-md-8\">\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">Card title</h5>\r\n                  <p className=\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>\r\n                  <p className=\"card-text\"><small className=\"text-muted\">Last updated 3 mins ago</small></p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","C:\\resource\\reactjs\\realestate\\src\\view\\CreateProject.js",["52"],"C:\\resource\\reactjs\\realestate\\src\\view\\ErrorBoundary.js",[],"C:\\resource\\reactjs\\realestate\\src\\redux\\ProjectAction.js",["53","54"],"import requestApi from './../utils/service';\r\nimport { GET_PROJECTS, POST_PROJECT } from './../utils/constants';\r\nimport axios from 'axios';\r\nexport function getProject() {\r\n  return function (dispatch) {\r\n    requestApi.get('http://localhost:3000/items').then(res => {\r\n      console.log(\"data \", res.data);\r\n      dispatch({ type: GET_PROJECTS, data: res.data })\r\n    }).catch(err => {\r\n      console.log(err);\r\n    })\r\n  }\r\n\r\n};\r\nexport function putProject() {\r\n  return function (dispatch) {\r\n    requestApi.get('http://localhost:3000/items').then(res => {\r\n      console.log(\"data \", res.data);\r\n      dispatch({ type: GET_PROJECTS, data: res.data })\r\n    }).catch(err => {\r\n      console.log(err);\r\n    })\r\n  }\r\n};\r\nexport function postProject(newObject) {\r\n  return function (dispatch) {\r\n    console.log(\"$$$$ \", newObject);\r\n    let requestObject = {\r\n      url: 'http://localhost:3000/items/',\r\n      data: newObject,\r\n      method: 'POST'\r\n    }\r\n    // axios(requestObject).then(res => {\r\n    //   console.log(res.data);\r\n    // })\r\n    requestApi.post('http://localhost:3000/items/', { newObject }).then(res => {\r\n      console.log(res.data);\r\n      dispatch({ type: POST_PROJECT, data: res.data })\r\n    }).catch(err => {\r\n      console.log(err);\r\n    })\r\n  }\r\n};\r\nexport function deleteProject(id) {\r\n  return async (dispatch) => {\r\n    let deleteObject = await requestApi.get('http://localhost:3000/items/' + id);\r\n    console.log('# ', deleteObject);\r\n  }\r\n}","C:\\resource\\reactjs\\realestate\\src\\redux\\store.js",[],"C:\\resource\\reactjs\\realestate\\src\\components\\projectCard\\ProjectCard.js",["55"],"C:\\resource\\reactjs\\realestate\\src\\utils\\constants.js",[],{"ruleId":"56","severity":1,"message":"57","line":10,"column":7,"nodeType":"58","messageId":"59","endLine":10,"endColumn":13},{"ruleId":"60","severity":1,"message":"61","line":5,"column":37,"nodeType":"62","messageId":"63","endLine":5,"endColumn":47},{"ruleId":"64","severity":1,"message":"65","line":13,"column":6,"nodeType":"66","endLine":13,"endColumn":8,"suggestions":"67"},{"ruleId":"60","severity":1,"message":"68","line":3,"column":10,"nodeType":"62","messageId":"63","endLine":3,"endColumn":21},{"ruleId":"60","severity":1,"message":"69","line":3,"column":8,"nodeType":"62","messageId":"63","endLine":3,"endColumn":13},{"ruleId":"60","severity":1,"message":"70","line":28,"column":9,"nodeType":"62","messageId":"63","endLine":28,"endColumn":22},{"ruleId":"71","severity":1,"message":"72","line":83,"column":15,"nodeType":"73","endLine":83,"endColumn":118},"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","no-unused-vars","'putProject' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["74"],"'useSelector' is defined but never used.","'axios' is defined but never used.","'requestObject' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"75","fix":"76"},"Update the dependencies array to be: [dispatch]",{"range":"77","text":"78"},[486,488],"[dispatch]"]